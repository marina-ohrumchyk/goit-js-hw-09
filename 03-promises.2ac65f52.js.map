{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAQC,SAASC,cAAc,UAC/BC,EAAUF,SAASC,cAAc,uBACjCE,EAASH,SAASC,cAAc,sBAChCG,EAAWJ,SAASC,cAAc,oBA2BxC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAlCPR,EAAMgB,iBAAiB,SAEvB,SAAeC,GACbA,EAAIC,iBACJ,IAAMC,GAAchB,EAAQiB,MACtBC,GAAQjB,EAAOgB,MACfE,GAAUjB,EAASe,MACzBjB,EAAQiB,MAAQ,GAChBhB,EAAOgB,MAAQ,GACff,EAASe,MAAQ,GACjB,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAGlCjB,EAFeiB,EAAI,EACPJ,EAAaI,EAAIF,GAEzBG,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA5B,GAAS6B,OAAOC,QAAQ,qBAAoCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,OACjEsB,QAAQC,IAAI,qBAAoCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAEvDwB,OAAM,SAAAP,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACnBkB,EAAA5B,GAAS6B,OAAOM,QAAQ,oBAAmCJ,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,OAChEsB,QAAQC,IAAI,oBAAmCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst btnEl = document.querySelector('button');\nconst DelayEl = document.querySelector(\"input[name='delay']\");\nconst StepEl = document.querySelector(\"input[name='step']\");\nconst AmountEl = document.querySelector(\" [name='amount']\");\n\nbtnEl.addEventListener('click', onBtn);\n\nfunction onBtn(evt) {\n  evt.preventDefault();\n  const delayFirst = +DelayEl.value;\n  const step = +StepEl.value;\n  const amount = +AmountEl.value;\n  DelayEl.value = '';\n  StepEl.value = '';\n  AmountEl.value = '';\n  for (let i = 0; i < amount; i += 1) {\n    let position = i + 1;\n    let delay = delayFirst + i * step;\n    createPromise(position, delay)\n       .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n         console.log(`Fulfilled promise ${position} in ${delay}ms`);\n       })\n       .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n         console.log(`Rejected promise ${position} in ${delay}ms`);\n       });\n   }\n }\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$btnEl","document","querySelector","$ce04d3a99e08e73b$var$DelayEl","$ce04d3a99e08e73b$var$StepEl","$ce04d3a99e08e73b$var$AmountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","delayFirst","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure"],"version":3,"file":"03-promises.2ac65f52.js.map"}